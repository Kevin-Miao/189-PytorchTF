Solutions: 

2A) tf.constant(5) 
2B) tf.constant([11, 12, 13]) 
2C) sample solution: tf.constant([[5, 5, 5], [5, 5, 5]])
2D) sample solution: tf.constant([[[[1., 12.], [3., 12.]], [[1., 43.], [1., 5.]]], [[[6., 1.], [7., 2.]], [[1., 8.], [9., 1.]]]])
2E) omg_four_dims.shape

3A) tf.Variable(const)
3B) to_var.assign([67, 68, 69])

4A) c = tf.constant([[0, 0], [5, 5]])
4B) result of argmax is the index of the max values along a certain axis
4C) tf.argmax(get_66)
4D) tf.argmax(get_ayyyht), tf.reduce_max(get_five)

5A) Solution: the error occurs in that the soft_max function uses numpy. Converting to tf operations will fix the issue. (return tf.nn.softmax(z))

6A) all_zeros = tf.zeros(shape=[2, 3])
6B) all_ones = tf.ones(shape=[3, 3, 2])
6C) all_zeroes_reshaped = tf.reshape(all_zeros, shape=[1, 6])
6D) all_ones_int32 = tf.cast(all_ones, tf.int32)
6E) identity_3 = tf.eye(3, 3)